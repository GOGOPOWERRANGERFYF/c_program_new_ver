'''
    for _ in range(10):
        print("Hello World!")
    
    _ 作为循环变量，忽略该循环变量的值

    a, b = 1, 2 #多重赋值

    a, b = (1, 2) #序列解包赋值

    类显式声明元类:
    class meta(type):
        pass
    class A(metaclass=meta):
        pass
    不显式声明元类则默认隐式声明为metaclass=type
    type(name, bases, dict)动态声明类

    __init__ 禁止返回值
    __class__ 魔法属性/特殊属性 可以查看对象是哪个类创建的
    使用type查看对象类型时，作用与__class__相同

    关于__class__的值的修改问题，暂时这样记，不能修改的解释器会报错的...

    特殊属性，特殊方法，特殊方法，魔法方法
    AI回答暂时复制过来的，暂存，待完善
    双下划线开头的属性：称为私有属性或名称改写属性，主要用于避免名称冲突，并提供一种约定俗成的私有化机制。
    双下划线开头并结尾的属性：称为特殊方法，不会进行名称改写，具有特殊的语义和用途。
    单下划线开头的属性：表示受保护的属性，传达了一种编程习惯，提醒其他开发者谨慎使用。


    元编程，代码像数据一样处理目标代码.
    通过python举例理解 元编程：通过代码生成，修改，变更(目标)代码。
    生成代码：
        ORM框架，通过Python代码生成SQL代码;
    修改代码：
        静态:C++的模板元编程(泛型:元编程子集)
        动态:setattr运行时操作对象的属性和方法
    更改代码：
        比动态操作更进一步，通过元类控制类的创建过程(专业点说相当于更改代码逻辑或结构?)
        
    元数据：数据的数据


    厘清逃逸变量和自由变量的口诀:内部函数使用从外部函数逃逸的自由变量...
    cell(单元格:类似excel单元格),一个单元格存储一个逃逸变量
'''